@using RazorLight
@inherits TemplatePage<KeyValuePair<string, ReadOnlyCollection<ApiEndpoint>>>
@using System
@using System.Collections.Generic
@using System.Collections.ObjectModel
@using System.Globalization
@using System.Linq
@using System.Text.RegularExpressions
@using ApiGenerator.Domain
@using ApiGenerator 
@using CsQuery.StringScanner.Implementation
using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using Elasticsearch.Net;
using static Elasticsearch.Net.HttpMethod;

//This file is automatically generated from https://github.com/elastic/elasticsearch/tree/master/rest-api-spec

@{
	KeyValuePair<string, ReadOnlyCollection<ApiEndpoint>> model = Model;
	string ns = model.Key;
	var endpoints = model.Value;
}
namespace Elasticsearch.Net
{
	///<summary> Raw operations with elasticsearch </summary>
	public class @(model.Key)Client : NamespacedClientProxy
	{
		public @(model.Key)Client(ElasticLowLevelClient client) : base(client) {}
@if (ns == "Cat")
{
	<text>protected override string ContentType { get; } = "text/plain";</text>
}
 	@{	
		var methods = endpoints.SelectMany(e=>e.LowLevelClientMethods).ToList();
		foreach (var method in methods)
		{
			await IncludeAsync("LowLevelClient/MethodImplementation.cshtml", method);
		}
	}
	}
}
